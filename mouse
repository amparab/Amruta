import java.util.HashMap;
import java.util.Map;

class TreeNode {
    int val;
    TreeNode left, right;
    TreeNode(int x) {
        val = x;
        left = right = null;
    }
}

public class DuplicateSubtrees {

    private Map<String, Integer> subtreeCount = new HashMap<>();

    public int countDuplicateSubtrees(TreeNode root) {
        if (root == null) {
            return 0;
        }
        countDuplicateSubtreesHelper(root);
        int totalCount = 0;
        for (int count : subtreeCount.values()) {
            if (count > 1) {
                totalCount++;
            }
        }
        return totalCount;
    }

    private String countDuplicateSubtreesHelper(TreeNode node) {
        if (node == null) {
            return "#"; // Represent null nodes with a special character
        }

        String treeString = node.val + "," +
                countDuplicateSubtreesHelper(node.left) + "," +
                countDuplicateSubtreesHelper(node.right);

        subtreeCount.put(treeString, subtreeCount.getOrDefault(treeString, 0) + 1);

        return treeString;
    }

    public static void main(String[] args) {
        // Example usage:
        DuplicateSubtrees solution = new DuplicateSubtrees();
        TreeNode root = new TreeNode(1);
        root.left = new TreeNode(2);
        root.right = new TreeNode(3);
        root.left.left = new TreeNode(4);
        root.right.left = new TreeNode(2);
        root.right.right = new TreeNode(4);
        root.right.left.left = new TreeNode(4);

        int duplicateCount = solution.countDuplicateSubtrees(root);
        System.out.println("Count of Duplicate Subtrees: " + duplicateCount);
    }
}const robot = require('robotjs');

// Define the screen coordinates for the rows you want to click
const firstRowX = 300;
const firstRowY = 200;

const secondRowX = 300;
const secondRowY = 300;

// Move mouse and click on the first row
robot.moveMouseSmooth(firstRowX, firstRowY);
robot.mouseClick();

// Wait for a brief moment (optional)
robot.setMouseDelay(1000);

// Move mouse and click on the second row
robot.moveMouseSmooth(secondRowX, secondRowY);
robot.mouseClick();
---------

const robot = require('robotjs');

// Get the mouse coordinates
const mousePos = robot.getMousePos();

console.log(`Mouse coordinates: x = ${mousePos.x}, y = ${mousePos.y}`);

----
puppetterr

const robot = require('robotjs');

// Get the mouse coordinates
const mousePos = robot.getMousePos();

----
js

const clickCoordinates = [
  { x: 100, y: 200 }, // First row coordinates
  { x: 100, y: 300 }, // Second row coordinates
  // Add more coordinates as needed
];

// Simulate clicking on each set of coordinates
for (const coords of clickCoordinates) {
  const element = document.elementFromPoint(coords.x, coords.y);
  if (element) {
    element.click();
    console.log(`Clicked at (${coords.x}, ${coords.y})`);
  } else {
    console.log(`No element found at (${coords.x}, ${coords.y})`);
  }
}

console.log(`Mouse coordinates: x = ${mousePos.x}, y = ${mousePos.y}`);


